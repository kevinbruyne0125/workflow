Workflow.

What is workflow?

Workflow is a finite state machine inspired API for modelling and interacting with what we tend to refer to as 'workflow'.

A lot of business modelling tends to involve workflow-like concepts, and the aim of this library is to make the expression of these concepts as clear as possible.

We'll demonstrate the API with a real world business case. Let's go!

Let's say we're modelling article submission from journalists. An article is written, then submitted. When it's submitted, it's awaiting review. Someone reviews the article, and then either accepts or rejects it. Here is the expression of this workflow using the API:

  Workflow.define 'Article Workflow' do
    state :new do
      event :submit, :transitions_to => :awaiting_review
    end
    state :awaiting_review do
      event :review, :transitions_to => :being_reviewed
    end
    state :being_reviewed do
      event :accept, :transitions_to => :accepted
      event :reject, :transitions_to => :accepted
    end
    state :accepted
    state :rejected
  end

The initial state is :new â€“ in this example that's somewhat meaningless. However, the :submit event :transitions_to => :being_reviewed. So, lets instantiate a machine (workflow? peh peh):

  workflow = Workflow.new('Article Workflow')
  workflow.state # => :new
  
Now we can call the submit event, which transitions to the :awaiting_review state:

  workflow.submit
  workflow.state # => :awaiting_approval
  
...

----------

(simple business case example)

(show)



[integration]
(manual integration with classes)
(manual integration with AR)
(expected automagic integration with classes)
(expected automagic interaction with AR)

